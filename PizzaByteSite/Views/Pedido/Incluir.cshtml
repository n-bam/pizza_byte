@model PizzaByteSite.Models.PedidoModel

@{
    ViewBag.Title = "Incluir Pedido";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <div class="content-header">
        <h1>
            Pedido
            <small>Incluir</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="~/Usuario/Inicio"><i class="fa fa-home"></i> Inicio</a></li>
            <li><a href="~/Pedido/Index"><i class="fa fa-files-o"></i> Pedidos</a></li>
            <li class="active"><i class="fa fa-plus"></i> Incluir</li>
        </ol>
    </div>

    <div class="content">
        <div class="row">
            @using (Html.BeginForm("Incluir", "Pedido", FormMethod.Post, new { id = "FormPedido" }))
            {
                <div class="col-lg-7 col-md-7 col-sm-12 col-xs-12">
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 id="tituloPedido" class="box-title">Itens do pedido</h3>
                        </div>

                        <div class="box-body">
                            <div class="form-horizontal">
                                @Html.AntiForgeryToken()
                                @Html.Partial("_SelecionarProduto")
                                @Html.Partial("_SelecionarCliente", Model)

                                <div class="form-group">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(m => m.IdCliente)
                                        @Html.HiddenFor(m => m.DiaPromocao)
                                        @Html.HiddenFor(m => m.Cliente.Id)
                                        @Html.HiddenFor(m => m.Entrega.IdEndereco)
                                        @Html.HiddenFor(m => m.Entrega.ClienteEndereco.Id)
                                        @Html.HiddenFor(m => m.Entrega.ClienteEndereco.Endereco.Id, new { @class = "Endereco_Id" })

                                        <center>
                                            @for (int i = 0; i < Model.ListaTipos.Count; i++)
                                            {
                                                @Html.Label(Model.ListaTipos[i].Text, new { @class = "control-label", @style = "margin-right:20px;" })
                                                @Html.RadioButtonFor(model => model.Tipo, Model.ListaTipos[i].Value, new { @class = "tipo", @style = "margin-right:50px;" })
                                            }

                                            @Html.ValidationMessageFor(m => m.Tipo, "", new { @class = "text-danger" })
                                        </center>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <center>
                                            <button type="button" class="btn btn-primary" id="btnAddProduto" title="Adicionar produto ao pedido"><i class="fa fa-cart-plus"></i> Adicionar</button>
                                            <button type="button" class="btn btn-info" id="btnAddCliente" title="Identificar o cliente do pedido"><i class="fa fa-user-circle"></i> Cliente</button>
                                        </center>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="table-responsive" style="overflow:auto; max-height:400px">
                                            <table class="table table-condensed" id="tblItensPedido">
                                                <thead>
                                                    <tr>
                                                        <th class="col-lg-6">Descrição</th>
                                                        <th class="col-lg-3">Quantidade</th>
                                                        <th class="col-lg-3">Unitário (R$)</th>
                                                        <th class="col-lg-3">Opções</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="tblCorpoItens">
                                                    @{
                                                        for (int i = 0; i < Model.ListaItens.Count; i++)
                                                        {
                                                            string mostrar = "";
                                                            if (Model.ListaItens[i].Quantidade == 0)
                                                            {
                                                                mostrar = "display:none;";
                                                            }

                                                            <tr id="@("Linha"+i)" style="@mostrar">
                                                                <td>
                                                                    @Html.EditorFor(model => model.ListaItens[i].DescricaoProduto, new { htmlAttributes = new { @class = "form-control", @style = "display:none" } })
                                                                    @Model.ListaItens[i].DescricaoProduto
                                                                </td>
                                                                <td>
                                                                    @Html.EditorFor(model => model.ListaItens[i].Quantidade, new { htmlAttributes = new
                                                                       {
                                                                           @class = "form-control quantidade",
                                                                           @onchange = "AtualizarTotal()",
                                                                           @onfocus = "$(this).maskMoney({ allowNegative: false, precision: 0, thousands: \"\", allowZero: true })"
                                                                       } })
                                                                </td>
                                                                <td>

                                                                    @Html.EditorFor(model => model.ListaItens[i].PrecoProduto, new { htmlAttributes = new
                                                                       {
                                                                           @class = "form-control preco",
                                                                           @onchange = "AtualizarTotal()",
                                                                           @onfocus = "$(this).maskMoney({ decimal: \",\", allowNegative: false, precision: 2, thousands: \"\", allowZero: true })"
                                                                       } })
                                                                </td>
                                                                <td style="display:none">
                                                                    @Html.EditorFor(model => model.ListaItens[i].TipoProduto, new { htmlAttributes = new { @class = "form-control" } })
                                                                </td>
                                                                <td style="display:none">
                                                                    @Html.EditorFor(model => model.ListaItens[i].Id, new { htmlAttributes = new { @class = "form-control" } })
                                                                </td>
                                                                <td style="display:none">
                                                                    @Html.EditorFor(model => model.ListaItens[i].IdProduto, new { htmlAttributes = new { @class = "form-control" } })
                                                                </td>
                                                                <td style="display:none">
                                                                    @Html.EditorFor(model => model.ListaItens[i].IdProdutoComposto, new { htmlAttributes = new { @class = "form-control" } })
                                                                </td>
                                                                <td>
                                                                    <button type="button" class="btn btn-danger" title="Remover do pedido" onclick="RemoverItem(@i)"><i class="fa fa-remove"></i></button>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Obs, new { @class = "control-label col-lg-2 col-md-3 col-sm-3 col-xs-12 pull-left" })
                                    <div class="col-lg-12 col-md-9 col-sm-9 col-xs-12">
                                        @Html.EditorFor(m => m.Obs, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @lines = "2" } })
                                        @Html.ValidationMessageFor(m => m.Obs, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-5 col-md-5 col-sm-12 col-xs-12">
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title">Valores do pedido</h3>
                        </div>

                        <div class="box-body">
                            <div class="form-horizontal">

                                <div class="form-group">
                                    @Html.LabelFor(m => m.PedidoIfood, new { @class = "control-label col-lg-7 col-md-7 col-sm-7 col-xs-12" })
                                    <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12">
                                        @Html.EditorFor(m => m.PedidoIfood, new { htmlAttributes = new { @class = "checkbox", @style = "margin-top:10px" } })
                                        @Html.ValidationMessageFor(m => m.PedidoIfood, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.TaxaEntrega, new { @class = "control-label col-lg-2 col-md-3 col-sm-3 col-xs-12" })
                                    <div class="col-lg-10 col-md-9 col-sm-9 col-xs-12">
                                        @Html.EditorFor(m => m.TaxaEntrega, new { htmlAttributes = new { @class = "form-control", @onchange = "AtualizarTotal()", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(m => m.TaxaEntrega, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Total, new { @class = "control-label col-lg-2 col-md-3 col-sm-3 col-xs-12" })
                                    <div class="col-lg-10 col-md-9 col-sm-9 col-xs-12">
                                        @Html.EditorFor(m => m.Total, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(m => m.Total, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="overlay" id="divCarregandoTaxa" hidden>
                            <i class="fa fa-refresh fa-spin"></i>
                        </div>
                    </div>

                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title">Formas de pagamento</h3>
                        </div>

                        <div class="box-body">
                            <div class="form-horizontal">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.RecebidoDinheiro, new { @class = "control-label col-lg-2 col-md-3 col-sm-3 col-xs-12" })
                                    <div class="col-lg-10 col-md-9 col-sm-9 col-xs-12">
                                        <div class="input-group">
                                            @Html.EditorFor(m => m.RecebidoDinheiro, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                            <div class="input-group-btn">
                                                <button id="btnReceberTudoDinheiro" type="button" class="btn btn-primary" title="Receber tudo em dinheiro"><i class="fa fa-usd"></i></button>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.RecebidoDinheiro, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.RecebidoDebito, new { @class = "control-label col-lg-2 col-md-3 col-sm-3 col-xs-12" })
                                    <div class="col-lg-10 col-md-9 col-sm-9 col-xs-12">
                                        <div class="input-group">
                                            @Html.EditorFor(m => m.RecebidoDebito, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                            <div class="input-group-btn">
                                                <button id="btnReceberTudoDebito" type="button" class="btn btn-primary" title="Receber tudo em débito"><i class="fa fa-usd"></i></button>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.RecebidoDebito, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.RecebidoCredito, new { @class = "control-label col-lg-2 col-md-3 col-sm-3 col-xs-12" })
                                    <div class="col-lg-10 col-md-9 col-sm-9 col-xs-12">
                                        <div class="input-group">
                                            @Html.EditorFor(m => m.RecebidoCredito, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                            <div class="input-group-btn">
                                                <button id="btnReceberTudoCredito" type="button" class="btn btn-primary" title="Receber tudo em crédito"><i class="fa fa-usd"></i></button>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.RecebidoCredito, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Troco, new { @class = "control-label col-lg-2 col-md-3 col-sm-3 col-xs-12" })
                                    <div class="col-lg-10 col-md-9 col-sm-9 col-xs-12">
                                        @Html.EditorFor(m => m.Troco, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(m => m.Troco, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="box-footer">
                                    <div class="col-lg-offset-2 col-md-offset-2 col-sm-offset-3">
                                        <a class="btn btn-default" href="~/Pedido/Index"><i class="fa fa-mail-reply"></i> Cancelar</a>
                                        <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Gravar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script src="~/Scripts/PizzaByteSite/plugins/mask/jquery.mask.min.js"></script>
<script src="~/Scripts/PizzaByteSite/plugins/mask/jquery.maskMoney.min.js"></script>
<script src="~/Scripts/PizzaByteSite/js/SweetAlert.min.js"></script>
<script src="~/Scripts/PizzaByteSite/Telas/Geral.js"></script>
<script src="~/Scripts/PizzaByteSite/Telas/IncluirEditarPedido.js"></script>
<script src="~/Scripts/PizzaByteSite/Telas/SelecionarProduto.js"></script>
<script src="~/Scripts/PizzaByteSite/Telas/SelecionarCliente.js"></script>

<script>
    $(document).ready(function () {
        // Máscaras
        $("#TaxaEntrega").maskMoney({ allowNegative: false, decimal: ",", thousands: "", allowZero: true });
        $("#Troco").maskMoney({ allowNegative: false, decimal: ",", thousands: "", allowZero: true });
        $("#RecebidoDinheiro").maskMoney({ allowNegative: false, decimal: ",", thousands: "", allowZero: true });
        $("#RecebidoDebito").maskMoney({ allowNegative: false, decimal: ",", thousands: "", allowZero: true });
        $("#RecebidoCredito").maskMoney({ allowNegative: false, decimal: ",", thousands: "", allowZero: true });
        $("#Total").maskMoney({ allowNegative: false, decimal: ",", thousands: "", allowZero: true });

        // Receber todo o valor em cartão de crédito
        $("#btnReceberTudoCredito").click(function () {
            ReceberTudo("RecebidoCredito");
        });

        // Receber todo o valor em cartão de débito
        $("#btnReceberTudoDebito").click(function () {
            ReceberTudo("RecebidoDebito");
        });

        // Receber todo o valor em dinheiro
        $("#btnReceberTudoDinheiro").click(function () {
            ReceberTudo("RecebidoDinheiro");
        });

        // Chama a modal para selecionar o produto
        $("#btnAddProduto").click(function () {
            $("#modalProduto").modal();
        });

        // Chama a modal para selecionar o cliente
        $("#btnAddCliente").click(function () {
            if ($("#Cliente_Nome").val() == "" || $("#Cliente_Nome").val() == null) {
                $('#PesquisaClienteTab').click();
            } else {
                $('#ClienteSelecionadoTab').click();
            }

            $("#modalCliente").modal();
        });

        // Ao alterar os valores, calcular o troco
        $("#RecebidoCredito").change(function () { CalcularTroco() });
        $("#RecebidoDebito").change(function () { CalcularTroco() });
        $("#RecebidoDinheiro").change(function () { CalcularTroco() });

        // Se alterar para entrega, buscar a taxa
        $(document).on("change", "input[type=radio]", function () {
            // Pegar o valor do readio button marcado
            var valor = $('[name="Tipo"]:checked').val();
            if (valor == "3" && $("#Entrega_ClienteEndereco_Endereco_Bairro").val() != ""
                && $("#Entrega_ClienteEndereco_Endereco_Bairro").val() != null) {
                ObterTaxaEntregaBairro();
            } else {
                $("#TaxaEntrega").val("0,00");
                $("#TaxaEntrega").change();
            }
        });

        //Capturar o submit
        $("#FormPedido").on("submit", function (event) {
            event.preventDefault();
            var form = this;

            var valor = $('[name="Tipo"]:checked').val();
            if (valor == "3" && ($("#TaxaEntrega").val() == "0,00" || $("#TaxaEntrega").val() == "0"
                || $("#TaxaEntrega").val() == 0 || $("#TaxaEntrega").val() == null)) {

                swal({
                    title: "Confirmação",
                    text: "Deseja mesmo incluir um pedido para entrega sem a taxa?",
                    type: "warning",
                    buttons: true,
                    showCancelButton: true,
                    buttons: ["Não!", "Sim, continue!"],
                    closeOnConfirm: false,
                    closeOnCancel: false
                }).then(function (confirmed) {
                    if (confirmed) {
                        form.submit();
                    } else {
                        return false;
                    }
                });
            } else {
                this.submit();
            }
        });

        // Não gravar o pedido no enter
        $(document).keypress(function (e) {
            if (e.keyCode === 13) {
                e.preventDefault();
            }
        });
    });
</script>

